#! /bin/bash
#
# Purpose: pre-processing for automated calving front extraction from optical landsat-8 and -9 imagery
#
# Author: Erik Loebel
# Last change: 2023-02-02
#
# ------------------------------------------

glacier=$1
ls_orginal="ls"
files_to_process=`$ls_orginal input/*.tar*`

for i in $files_to_process
	do
		# creating folders
		if [ ! -d data ]; then
			mkdir data
		fi
		if [ ! -d data/OUT ]; then
			mkdir data/OUT
		fi
		if [ ! -d data/OUT/TEMP ]; then
			mkdir data/OUT/TEMP
		fi
		# unpacking
		#if [ "$glacier" != "zachariae_isstrom_south" ] && [ "$glacier" != "nioghalvfjerdsbrae_b" ] && [ "$glacier" != "nioghalvfjerdsbrae_c" ] && [ "$glacier" != "humboldt_c" ] && [ "$glacier" != "humboldt_e" ] && [ "$glacier" != "humboldt_g" ] && [ "$glacier" != "humboldt_i" ] && [ "$glacier" != "humboldt_k" ] && [ "$glacier" != "humboldt_m" ]; then
		#	echo "  - unpacking satellite scene ---> $i"
		#	tar -xf $i --directory data/OUT/TEMP
		#fi
		echo "  - unpacking satellite scene ---> $i"
		tar -xf $i --directory data/OUT/TEMP
		
		# croping bands by centre coordinates
		echo "  - croping bands by centre coordinates"
		srs=`gdalsrsinfo data/OUT/TEMP/*_B1.* -o proj4`
		if [ "$glacier" = "custom" ]; then
			lon=$2
			lat=$3
			echo "  - front coordinats (EPSG 3413) of custom glacier ---> " "lon: "$lon "lat: "$lat
			x_px=`echo -e "$lon  $lat" | gdaltransform -i -t_srs "+proj=longlat +datum=WGS84 +no_defs +type=crs" data/OUT/TEMP/*_B1.* | awk '{print int($1)}'`
			y_px=`echo -e "$lon  $lat" | gdaltransform -i -t_srs "+proj=longlat +datum=WGS84 +no_defs +type=crs" data/OUT/TEMP/*_B1.* | awk '{print int($2)}'`
		else
			x_3413=`cat scripts/frontlagen_center_coord.txt | grep -a $glacier | awk '{print $2}'`
			y_3413=`cat scripts/frontlagen_center_coord.txt | grep -a $glacier | awk '{print $3}'`
			echo "  - front coordinats (EPSG 3413) of $glacier ---> " "X: "$x_3413 "Y: "$y_3413
			x_px=`echo -e "$x_3413  $y_3413" | gdaltransform -i -t_srs "+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs" data/OUT/TEMP/*_B1.* | awk '{print int($1)}'`
			y_px=`echo -e "$x_3413  $y_3413" | gdaltransform -i -t_srs "+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs" data/OUT/TEMP/*_B1.* | awk '{print int($2)}'`
		fi
		
		# refelctic bands (30m resolution -> 512x512px box)

		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B1.* data/OUT/TEMP/B1.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B2.* data/OUT/TEMP/B2.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B3.* data/OUT/TEMP/B3.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B4.* data/OUT/TEMP/B4.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B5.* data/OUT/TEMP/B5.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B6.* data/OUT/TEMP/B6.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B7.* data/OUT/TEMP/B7.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B10.* data/OUT/TEMP/B10.tif
		gdal_translate -q -srcwin $((x_px-256)) $((y_px-256)) 512 512 -of GTiff data/OUT/TEMP/*_B11.* data/OUT/TEMP/B11.tif
		
		# getting meta data
		landsat_meta=data/OUT/TEMP/*MTL.txt
		aq_date=`cat $landsat_meta | grep -a 'DATE_ACQUIRED' | awk '{print $3}' | sed 's/-//g'`
		
		# create new folder
		if [ ! -d data/OUT/$glacier ]; then
  			mkdir data/OUT/$glacier
		fi
		if [ ! -d data/OUT/$glacier/$aq_date ]; then
  			mkdir data/OUT/$glacier/$aq_date
		fi
		
		# moving and deleting
		mv data/OUT/TEMP/B*.tif data/OUT/$glacier/$aq_date
		#if [ "$glacier" != "zachariae_isstrom_north" ] && [ "$glacier" != "nioghalvfjerdsbrae_a" ] && [ "$glacier" != "nioghalvfjerdsbrae_b" ] && [ "$glacier" != "humboldt_a" ] && [ "$glacier" != "humboldt_c" ] && [ "$glacier" != "humboldt_e" ] && [ "$glacier" != "humboldt_g" ] && [ "$glacier" != "humboldt_i" ] && [ "$glacier" != "humboldt_k" ]; then
		#	echo "  - removing raw unpacked satellite files"
		#	rm -r data/OUT/TEMP
		#fi
		rm -r data/OUT/TEMP
		
		# perfoming spectral analysis
		python scripts/spectral_pre-processing.py $aq_date $glacier
	done
